// Tencent is pleased to support the open source community by making
// 蓝鲸智云 - 监控平台 (BlueKing - Monitor) available.
// Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.
// Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
// You may obtain a copy of the License at http://opensource.org/licenses/MIT
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

package influxdb_test

import (
	"context"
	"fmt"
	"testing"
	"time"

	"github.com/golang/mock/gomock"
	"github.com/prashantv/gostub"
	"github.com/stretchr/testify/assert"

	"github.com/TencentBlueKing/bkmonitor-datalink/pkg/unify-query/influxdb"
	"github.com/TencentBlueKing/bkmonitor-datalink/pkg/unify-query/influxdb/decoder"
	"github.com/TencentBlueKing/bkmonitor-datalink/pkg/unify-query/influxdb/mocktest"
	"github.com/TencentBlueKing/bkmonitor-datalink/pkg/unify-query/internal/json"
	"github.com/TencentBlueKing/bkmonitor-datalink/pkg/unify-query/log"
)

// fakeData
func fakeData(t *testing.T) (*gomock.Controller, *gostub.Stubs) {
	log.InitTestLogger()
	ctrl := gomock.NewController(t)
	// 制造一个返回假数据的influxdb client
	mockClient := mocktest.NewMockClient(ctrl)
	mockResponse := &decoder.Response{
		Results: []decoder.Result{
			{Series: []*decoder.Row{
				{
					Name:    "table1",
					Columns: []string{"_time", "_value"},
					Tags: map[string]string{
						"tag1": "tagv1",
						"tag2": "tagv2",
					},
					Values: [][]interface{}{
						{"2021-05-20T07:45:04Z", 12334},
						{"2021-05-20T07:46:04Z", 12334},
						{"2021-05-20T07:47:14Z", 12334},
						{"2021-05-20T07:48:14Z", 12341},
						{"2021-05-20T07:49:14Z", 12345},
					},
				},
			}},
		},
	}
	mockClient.EXPECT().Query(gomock.Any(), gomock.Any(), gomock.Any(), gomock.Any(), gomock.Any(), gomock.Any()).Return(mockResponse, nil).AnyTimes()

	stubs := gostub.New()

	_ = influxdb.InitGlobalInstance(context.Background(), &influxdb.Params{
		Timeout: 30 * time.Second,
	}, mockClient)

	return ctrl, stubs
}

// TestAsyncOutput
func TestAsyncOutput(t *testing.T) {
	log.InitTestLogger()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()
	// 制造一个返回假数据的influxdb client
	mockClient := mocktest.NewMockClient(ctrl)
	mockResponse := &decoder.Response{
		Results: []decoder.Result{
			{Series: []*decoder.Row{
				{
					Name:    "table1",
					Columns: []string{"_time", "_value"},
					Values: [][]interface{}{
						{"2021-05-20T07:45:04Z", 12334},
						{"2021-05-20T07:46:04Z", 12334},
						{"2021-05-20T07:47:14Z", 12334},
						{"2021-05-20T07:48:14Z", 12341},
						{"2021-05-20T07:49:14Z", 12345},
					},
				},
			}},
		},
	}
	emptyResponse := &decoder.Response{
		Results: []decoder.Result{},
	}
	var (
		db1      = "db1"
		sql1     = "select value as _value,time as _time from table1 where t1='g' and time > 1621496484000000000 and time < 1621496964000000000"
		db2      = "db2"
		sql2     = "select value as _value,time as _time from table1 where t1='g' and time > 1621496484000000000 and time < 1621496964000000000"
		sqlInfos = []influxdb.SQLInfo{
			{
				DB:  db1,
				SQL: sql1,
			}, {
				DB:  db2,
				SQL: sql2,
			},
		}
	)
	mockClient.EXPECT().Query(gomock.Any(), gomock.Eq(db1), gomock.Eq(sql1), gomock.Any(), gomock.Any(), gomock.Any()).Return(mockResponse, nil).AnyTimes()
	mockClient.EXPECT().Query(gomock.Any(), gomock.Eq(db2), gomock.Eq(sql2), gomock.Any(), gomock.Any(), gomock.Any()).Return(emptyResponse, nil).AnyTimes()

	stubs := gostub.New()
	defer stubs.Reset()

	_ = influxdb.InitGlobalInstance(context.Background(), &influxdb.Params{
		Timeout: 30 * time.Second,
	}, mockClient)

	tables, err := influxdb.QueryAsync(context.Background(), sqlInfos, "")
	if err != nil {
		fmt.Println(err)
		return
	}

	assert.Nil(t, err)
	assert.NotNil(t, tables)

	assert.Equal(t, "headers:[_value _time]\ntypes:[float string]\ngroup keys:[bk_task_index]\ngroup values:[]\n[12334 2021-05-20T07:45:04Z]\n[12334 2021-05-20T07:46:04Z]\n[12334 2021-05-20T07:47:14Z]\n[12341 2021-05-20T07:48:14Z]\n[12345 2021-05-20T07:49:14Z]\n", tables.String())
}

// TestGroupBy
func TestGroupBy(t *testing.T) {
	data := `[{"name":"cpu_summary","columns":["_time","_value","bk_biz_id","bk_cloud_id","bk_supplier_id","bk_target_cloud_id","bk_target_ip","device_name","hostname","ip"],"values":[["2021-08-24T12:00:56Z",1.1787488422133678,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:00:56Z",0.5758157390226424,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:00:56Z",9.189053479211022,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:00:56Z",1.6511007338849786,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:00:56Z",8.780160857742022,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:00:56Z",30.82440300745231,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:00:56Z",38.62660944195749,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:00:56Z",1.2533422459144001,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:01:56Z",1.145359609368273,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:01:56Z",0.5424803872507733,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:01:56Z",8.276899924582034,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:01:56Z",1.7019856498673305,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:01:56Z",8.19369973196781,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:01:56Z",22.06960479309041,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:01:56Z",25.379645943562686,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:01:56Z",1.1363636363813223,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:02:56Z",1.741398165950821,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:02:56Z",1.0016694491164386,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:02:56Z",12.835120640582524,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:02:56Z",2.5187656379220154,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:02:56Z",8.545576408043786,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:02:56Z",46.45589842485261,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:02:56Z",29.377676997095005,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:02:56Z",1.2026056454229423,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:03:56Z",1.3780354592294548,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:03:56Z",0.5257009345676369,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:03:56Z",8.560213797433004,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:03:56Z",1.65165165150205,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:03:56Z",8.093163539039251,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:03:56Z",22.392586352890703,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:03:56Z",26.59395973145055,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:03:56Z",1.253132832399512,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:04:56Z",1.3116959557365824,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:04:56Z",0.5341791169361774,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:04:56Z",8.341700135761048,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:04:56Z",2.370617696044598,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:04:56Z",8.566638725556665,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:04:56Z",22.24094355057531,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:04:56Z",25.579247817275082,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:04:56Z",1.2525050101197799,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:05:56Z",1.3860887098919377,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:05:56Z",0.5175292153035469,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:05:56Z",9.03836488259614,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:05:56Z",1.602403605341945,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:05:56Z",8.143431634897675,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:05:56Z",32.44609164542279,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:05:56Z",27.90229161419864,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:05:56Z",1.2364243944267057,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:06:56Z",1.4937898625358987,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:06:56Z",0.5343129069539093,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:06:56Z",7.750899808932389,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:06:56Z",1.5179316096508726,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:06:56Z",8.549874266729455,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:06:56Z",24.9262909624078,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:06:56Z",59.69648696141153,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:06:56Z",1.269417070427924,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:07:56Z",1.8885344972207012,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:07:56Z",1.0183639399018447,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:07:56Z",12.286575158370558,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:07:56Z",2.219626168323257,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:07:56Z",8.024794772875913,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:07:56Z",40.18549746321112,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:07:56Z",52.722231557485564,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:07:56Z",1.236217841627222,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:08:56Z",1.543494673130278,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:08:56Z",0.6009013519658645,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:08:56Z",21.77703268733308,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:08:56Z",1.5520694258432275,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:08:56Z",8.517773305818258,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:08:56Z",23.38383838836149,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:08:56Z",23.719563392552622,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:08:56Z",1.2199197861867666,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:09:56Z",1.6682035374979551,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:09:56Z",0.5424351164424456,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:09:56Z",19.20596365215852,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:09:56Z",2.353923205358038,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:09:56Z",8.137583892570257,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:09:56Z",25.06982649451891,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:09:56Z",37.785618279246805,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:09:56Z",1.2360113581358432,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:10:56Z",1.5992631668395854,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:10:56Z",0.534179116887594,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:10:56Z",7.947408092183444,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:10:56Z",1.5502583764267808,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:10:56Z",8.737212812628373,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:10:56Z",32.27222832569239,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:10:56Z",34.96515240605265,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:10:56Z",1.1693952558213456,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:11:56Z",1.6589861747802415,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:11:56Z",0.5174428309400382,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:11:56Z",8.202077746744619,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:11:56Z",1.5507753877137544,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"],["2021-08-24T12:11:56Z",8.464632920074514,"2","0","0","0","127.0.0.1","cpu-total","ip-10-0-1-48-n-bcs-k8s-40000","127.0.0.1"],["2021-08-24T12:11:56Z",20.83859560934145,"2","0","0","0","127.0.0.1","cpu-total","VM-1-56-centos","127.0.0.1"],["2021-08-24T12:11:56Z",51.99697935844213,"2","0","0","0","127.0.0.1","cpu-total","VM-1-7-centos","127.0.0.1"],["2021-08-24T12:11:56Z",1.1857047428511789,"2","0","0","0","127.0.0.1","cpu-total","VM-1-86-centos","127.0.0.1"],["2021-08-24T12:12:56Z",1.8569868081444194,"2","0","0","0","127.0.0.1","cpu-total","VM-1-125-centos","127.0.0.1"],["2021-08-24T12:12:56Z",0.9931564010827747,"2","0","0","0","127.0.0.1","cpu-total","VM-1-139-centos","127.0.0.1"],["2021-08-24T12:12:56Z",12.780757625685412,"2","0","0","0","127.0.0.1","cpu-total","VM-1-21-centos","127.0.0.1"],["2021-08-24T12:12:56Z",2.4028032704009368,"2","0","0","0","127.0.0.1","cpu-total","VM-1-38-centos","127.0.0.1"]]}]`
	var rows []*decoder.Row
	err := json.Unmarshal([]byte(data), &rows)
	assert.Nil(t, err)

	resultRows := influxdb.GroupBySeries(context.Background(), rows)

	result, err := json.Marshal(resultRows)
	assert.Nil(t, err)
	assert.JSONEq(t, `[{"name":"result_0","tags":{"bk_biz_id":"2","bk_cloud_id":"0","bk_supplier_id":"0","bk_target_cloud_id":"0","bk_target_ip":"127.0.0.1","device_name":"cpu-total","hostname":"VM-1-125-centos","ip":"127.0.0.1"},"columns":["_value","_time"],"values":[[1.1787488422133678,"2021-08-24T12:00:56Z"],[1.145359609368273,"2021-08-24T12:01:56Z"],[1.741398165950821,"2021-08-24T12:02:56Z"],[1.3780354592294548,"2021-08-24T12:03:56Z"],[1.3116959557365824,"2021-08-24T12:04:56Z"],[1.3860887098919377,"2021-08-24T12:05:56Z"],[1.4937898625358987,"2021-08-24T12:06:56Z"],[1.8885344972207012,"2021-08-24T12:07:56Z"],[1.543494673130278,"2021-08-24T12:08:56Z"],[1.6682035374979551,"2021-08-24T12:09:56Z"],[1.5992631668395854,"2021-08-24T12:10:56Z"],[1.6589861747802415,"2021-08-24T12:11:56Z"],[1.8569868081444194,"2021-08-24T12:12:56Z"]]},{"name":"result_1","tags":{"bk_biz_id":"2","bk_cloud_id":"0","bk_supplier_id":"0","bk_target_cloud_id":"0","bk_target_ip":"127.0.0.1","device_name":"cpu-total","hostname":"VM-1-139-centos","ip":"127.0.0.1"},"columns":["_value","_time"],"values":[[0.5758157390226424,"2021-08-24T12:00:56Z"],[0.5424803872507733,"2021-08-24T12:01:56Z"],[1.0016694491164386,"2021-08-24T12:02:56Z"],[0.5257009345676369,"2021-08-24T12:03:56Z"],[0.5341791169361774,"2021-08-24T12:04:56Z"],[0.5175292153035469,"2021-08-24T12:05:56Z"],[0.5343129069539093,"2021-08-24T12:06:56Z"],[1.0183639399018447,"2021-08-24T12:07:56Z"],[0.6009013519658645,"2021-08-24T12:08:56Z"],[0.5424351164424456,"2021-08-24T12:09:56Z"],[0.534179116887594,"2021-08-24T12:10:56Z"],[0.5174428309400382,"2021-08-24T12:11:56Z"],[0.9931564010827747,"2021-08-24T12:12:56Z"]]},{"name":"result_2","tags":{"bk_biz_id":"2","bk_cloud_id":"0","bk_supplier_id":"0","bk_target_cloud_id":"0","bk_target_ip":"127.0.0.1","device_name":"cpu-total","hostname":"VM-1-21-centos","ip":"127.0.0.1"},"columns":["_value","_time"],"values":[[9.189053479211022,"2021-08-24T12:00:56Z"],[8.276899924582034,"2021-08-24T12:01:56Z"],[12.835120640582524,"2021-08-24T12:02:56Z"],[8.560213797433004,"2021-08-24T12:03:56Z"],[8.341700135761048,"2021-08-24T12:04:56Z"],[9.03836488259614,"2021-08-24T12:05:56Z"],[7.750899808932389,"2021-08-24T12:06:56Z"],[12.286575158370558,"2021-08-24T12:07:56Z"],[21.77703268733308,"2021-08-24T12:08:56Z"],[19.20596365215852,"2021-08-24T12:09:56Z"],[7.947408092183444,"2021-08-24T12:10:56Z"],[8.202077746744619,"2021-08-24T12:11:56Z"],[12.780757625685412,"2021-08-24T12:12:56Z"]]},{"name":"result_3","tags":{"bk_biz_id":"2","bk_cloud_id":"0","bk_supplier_id":"0","bk_target_cloud_id":"0","bk_target_ip":"127.0.0.1","device_name":"cpu-total","hostname":"VM-1-38-centos","ip":"127.0.0.1"},"columns":["_value","_time"],"values":[[1.6511007338849786,"2021-08-24T12:00:56Z"],[1.7019856498673305,"2021-08-24T12:01:56Z"],[2.5187656379220154,"2021-08-24T12:02:56Z"],[1.65165165150205,"2021-08-24T12:03:56Z"],[2.370617696044598,"2021-08-24T12:04:56Z"],[1.602403605341945,"2021-08-24T12:05:56Z"],[1.5179316096508726,"2021-08-24T12:06:56Z"],[2.219626168323257,"2021-08-24T12:07:56Z"],[1.5520694258432275,"2021-08-24T12:08:56Z"],[2.353923205358038,"2021-08-24T12:09:56Z"],[1.5502583764267808,"2021-08-24T12:10:56Z"],[1.5507753877137544,"2021-08-24T12:11:56Z"],[2.4028032704009368,"2021-08-24T12:12:56Z"]]},{"name":"result_5","tags":{"bk_biz_id":"2","bk_cloud_id":"0","bk_supplier_id":"0","bk_target_cloud_id":"0","bk_target_ip":"127.0.0.1","device_name":"cpu-total","hostname":"VM-1-56-centos","ip":"127.0.0.1"},"columns":["_value","_time"],"values":[[30.82440300745231,"2021-08-24T12:00:56Z"],[22.06960479309041,"2021-08-24T12:01:56Z"],[46.45589842485261,"2021-08-24T12:02:56Z"],[22.392586352890703,"2021-08-24T12:03:56Z"],[22.24094355057531,"2021-08-24T12:04:56Z"],[32.44609164542279,"2021-08-24T12:05:56Z"],[24.9262909624078,"2021-08-24T12:06:56Z"],[40.18549746321112,"2021-08-24T12:07:56Z"],[23.38383838836149,"2021-08-24T12:08:56Z"],[25.06982649451891,"2021-08-24T12:09:56Z"],[32.27222832569239,"2021-08-24T12:10:56Z"],[20.83859560934145,"2021-08-24T12:11:56Z"]]},{"name":"result_6","tags":{"bk_biz_id":"2","bk_cloud_id":"0","bk_supplier_id":"0","bk_target_cloud_id":"0","bk_target_ip":"127.0.0.1","device_name":"cpu-total","hostname":"VM-1-7-centos","ip":"127.0.0.1"},"columns":["_value","_time"],"values":[[38.62660944195749,"2021-08-24T12:00:56Z"],[25.379645943562686,"2021-08-24T12:01:56Z"],[29.377676997095005,"2021-08-24T12:02:56Z"],[26.59395973145055,"2021-08-24T12:03:56Z"],[25.579247817275082,"2021-08-24T12:04:56Z"],[27.90229161419864,"2021-08-24T12:05:56Z"],[59.69648696141153,"2021-08-24T12:06:56Z"],[52.722231557485564,"2021-08-24T12:07:56Z"],[23.719563392552622,"2021-08-24T12:08:56Z"],[37.785618279246805,"2021-08-24T12:09:56Z"],[34.96515240605265,"2021-08-24T12:10:56Z"],[51.99697935844213,"2021-08-24T12:11:56Z"]]},{"name":"result_7","tags":{"bk_biz_id":"2","bk_cloud_id":"0","bk_supplier_id":"0","bk_target_cloud_id":"0","bk_target_ip":"127.0.0.1","device_name":"cpu-total","hostname":"VM-1-86-centos","ip":"127.0.0.1"},"columns":["_value","_time"],"values":[[1.2533422459144001,"2021-08-24T12:00:56Z"],[1.1363636363813223,"2021-08-24T12:01:56Z"],[1.2026056454229423,"2021-08-24T12:02:56Z"],[1.253132832399512,"2021-08-24T12:03:56Z"],[1.2525050101197799,"2021-08-24T12:04:56Z"],[1.2364243944267057,"2021-08-24T12:05:56Z"],[1.269417070427924,"2021-08-24T12:06:56Z"],[1.236217841627222,"2021-08-24T12:07:56Z"],[1.2199197861867666,"2021-08-24T12:08:56Z"],[1.2360113581358432,"2021-08-24T12:09:56Z"],[1.1693952558213456,"2021-08-24T12:10:56Z"],[1.1857047428511789,"2021-08-24T12:11:56Z"]]},{"name":"result_4","tags":{"bk_biz_id":"2","bk_cloud_id":"0","bk_supplier_id":"0","bk_target_cloud_id":"0","bk_target_ip":"127.0.0.1","device_name":"cpu-total","hostname":"ip-10-0-1-48-n-bcs-k8s-40000","ip":"127.0.0.1"},"columns":["_value","_time"],"values":[[8.780160857742022,"2021-08-24T12:00:56Z"],[8.19369973196781,"2021-08-24T12:01:56Z"],[8.545576408043786,"2021-08-24T12:02:56Z"],[8.093163539039251,"2021-08-24T12:03:56Z"],[8.566638725556665,"2021-08-24T12:04:56Z"],[8.143431634897675,"2021-08-24T12:05:56Z"],[8.549874266729455,"2021-08-24T12:06:56Z"],[8.024794772875913,"2021-08-24T12:07:56Z"],[8.517773305818258,"2021-08-24T12:08:56Z"],[8.137583892570257,"2021-08-24T12:09:56Z"],[8.737212812628373,"2021-08-24T12:10:56Z"],[8.464632920074514,"2021-08-24T12:11:56Z"]]}]`, string(result))
}

// TestMerge
func TestMerge(t *testing.T) {
	ctrl, stub := fakeData(t)
	defer ctrl.Finish()
	defer stub.Reset()
	sqlInfos := []influxdb.SQLInfo{
		{DB: "db1", SQL: "select value as _value,time as _time from table1 where t1='g' and time > 1621496484000000000 and time < 1621496964000000000 limit 20000"},
		{DB: "db1", SQL: "select value as _value,time as _time from table1 where t1='g' and time > 1621496484000000000 and time < 1621496964000000000 limit 20000"},
	}
	tables, errs := influxdb.QueryAsync(context.Background(), sqlInfos, "")
	assert.Equal(t, 0, len(errs))
	assert.NotNil(t, tables)
	assert.Equal(t, `headers:[_value _time]
types:[float string]
group keys:[bk_task_index tag1 tag2]
group values:[ tagv1 tagv2]
[12334 2021-05-20T07:45:04Z]
[12334 2021-05-20T07:46:04Z]
[12334 2021-05-20T07:47:14Z]
[12341 2021-05-20T07:48:14Z]
[12345 2021-05-20T07:49:14Z]
[12334 2021-05-20T07:45:04Z]
[12334 2021-05-20T07:46:04Z]
[12334 2021-05-20T07:47:14Z]
[12341 2021-05-20T07:48:14Z]
[12345 2021-05-20T07:49:14Z]
`, tables.String())
}
