// Tencent is pleased to support the open source community by making
// 蓝鲸智云 - 监控平台 (BlueKing - Monitor) available.
// Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.
// Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
// You may obtain a copy of the License at http://opensource.org/licenses/MIT
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

//go:build redis_v2
// +build redis_v2

package storage_test

import (
	"testing"
)

// BenchmarkStoreSet_Reids :
func BenchmarkStoreSet_Reids(b *testing.B) {
	withClosingStore(benchmarkStoreSet, b, newReids())
}

// BenchmarkStoreUpdate_Reids :
func BenchmarkStoreUpdate_Reids(b *testing.B) {
	withClosingStore(benchmarkStoreUpdate, b, newReids())
}

// BenchmarkStoreGet_Reids :
func BenchmarkStoreGet_Reids(b *testing.B) {
	withClosingStore(benchmarkStoreGet, b, newReids())
}

// BenchmarkStoreGetHotPot_Reids :
func BenchmarkStoreGetHotPot_Reids(b *testing.B) {
	withClosingStore(benchmarkStoreGetHotPot, b, newReids())
}

// benchmarkStoreExistsMissing_Reids :
func BenchmarkStoreExistsMissing_Reids(b *testing.B) {
	withClosingStore(benchmarkStoreExistsMissing, b, newReids())
}

// BenchmarkStoreExists_Reids :
func BenchmarkStoreExists_Reids(b *testing.B) {
	withClosingStore(benchmarkStoreExists, b, newReids())
}

// BenchmarkStoreDelete_Reids :
func BenchmarkStoreDelete_Reids(b *testing.B) {
	withClosingStore(benchmarkStoreDelete, b, newReids())
}

// BenchmarkStoreScan_Reids :
func BenchmarkStoreScan_Reids(b *testing.B) {
	withClosingStore(benchmarkStoreScan, b, newReids())
}
