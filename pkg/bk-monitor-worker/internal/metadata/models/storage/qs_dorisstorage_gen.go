// Code generated by go-queryset. DO NOT EDIT.
package storage

import (
	"errors"
	"fmt"
	"strings"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set DorisStorageQuerySet

// DorisStorageQuerySet is an queryset type for DorisStorage
type DorisStorageQuerySet struct {
	db *gorm.DB
}

// NewDorisStorageQuerySet constructs new DorisStorageQuerySet
func NewDorisStorageQuerySet(db *gorm.DB) DorisStorageQuerySet {
	return DorisStorageQuerySet{
		db: db.Model(&DorisStorage{}),
	}
}

func (qs DorisStorageQuerySet) w(db *gorm.DB) DorisStorageQuerySet {
	return NewDorisStorageQuerySet(db)
}

func (qs DorisStorageQuerySet) Select(fields ...DorisStorageDBSchemaField) DorisStorageQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *DorisStorage) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *DorisStorage) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) All(ret *[]DorisStorage) error {
	return qs.db.Find(ret).Error
}

// BkTenantIDEq is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkTenantIDEq(bkTenantID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bk_tenant_id = ?", bkTenantID))
}

// BkTenantIDGt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkTenantIDGt(bkTenantID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bk_tenant_id > ?", bkTenantID))
}

// BkTenantIDGte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkTenantIDGte(bkTenantID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bk_tenant_id >= ?", bkTenantID))
}

// BkTenantIDIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkTenantIDIn(bkTenantID ...string) DorisStorageQuerySet {
	if len(bkTenantID) == 0 {
		qs.db.AddError(errors.New("must at least pass one bkTenantID in BkTenantIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("bk_tenant_id IN (?)", bkTenantID))
}

// BkTenantIDLike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkTenantIDLike(bkTenantID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bk_tenant_id LIKE ?", bkTenantID))
}

// BkTenantIDLt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkTenantIDLt(bkTenantID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bk_tenant_id < ?", bkTenantID))
}

// BkTenantIDLte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkTenantIDLte(bkTenantID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bk_tenant_id <= ?", bkTenantID))
}

// BkTenantIDNe is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkTenantIDNe(bkTenantID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bk_tenant_id != ?", bkTenantID))
}

// BkTenantIDNotIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkTenantIDNotIn(bkTenantID ...string) DorisStorageQuerySet {
	if len(bkTenantID) == 0 {
		qs.db.AddError(errors.New("must at least pass one bkTenantID in BkTenantIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("bk_tenant_id NOT IN (?)", bkTenantID))
}

// BkTenantIDNotlike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkTenantIDNotlike(bkTenantID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bk_tenant_id NOT LIKE ?", bkTenantID))
}

// BkbaseTableIDEq is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkbaseTableIDEq(bkbaseTableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bkbase_table_id = ?", bkbaseTableID))
}

// BkbaseTableIDGt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkbaseTableIDGt(bkbaseTableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bkbase_table_id > ?", bkbaseTableID))
}

// BkbaseTableIDGte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkbaseTableIDGte(bkbaseTableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bkbase_table_id >= ?", bkbaseTableID))
}

// BkbaseTableIDIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkbaseTableIDIn(bkbaseTableID ...string) DorisStorageQuerySet {
	if len(bkbaseTableID) == 0 {
		qs.db.AddError(errors.New("must at least pass one bkbaseTableID in BkbaseTableIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("bkbase_table_id IN (?)", bkbaseTableID))
}

// BkbaseTableIDLike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkbaseTableIDLike(bkbaseTableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bkbase_table_id LIKE ?", bkbaseTableID))
}

// BkbaseTableIDLt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkbaseTableIDLt(bkbaseTableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bkbase_table_id < ?", bkbaseTableID))
}

// BkbaseTableIDLte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkbaseTableIDLte(bkbaseTableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bkbase_table_id <= ?", bkbaseTableID))
}

// BkbaseTableIDNe is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkbaseTableIDNe(bkbaseTableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bkbase_table_id != ?", bkbaseTableID))
}

// BkbaseTableIDNotIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkbaseTableIDNotIn(bkbaseTableID ...string) DorisStorageQuerySet {
	if len(bkbaseTableID) == 0 {
		qs.db.AddError(errors.New("must at least pass one bkbaseTableID in BkbaseTableIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("bkbase_table_id NOT IN (?)", bkbaseTableID))
}

// BkbaseTableIDNotlike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) BkbaseTableIDNotlike(bkbaseTableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("bkbase_table_id NOT LIKE ?", bkbaseTableID))
}

// Count is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Delete is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) Delete() error {
	return qs.db.Delete(DorisStorage{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(DorisStorage{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(DorisStorage{})
	return db.RowsAffected, db.Error
}

// ExpireDaysEq is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) ExpireDaysEq(expireDays int) DorisStorageQuerySet {
	return qs.w(qs.db.Where("expire_days = ?", expireDays))
}

// ExpireDaysGt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) ExpireDaysGt(expireDays int) DorisStorageQuerySet {
	return qs.w(qs.db.Where("expire_days > ?", expireDays))
}

// ExpireDaysGte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) ExpireDaysGte(expireDays int) DorisStorageQuerySet {
	return qs.w(qs.db.Where("expire_days >= ?", expireDays))
}

// ExpireDaysIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) ExpireDaysIn(expireDays ...int) DorisStorageQuerySet {
	if len(expireDays) == 0 {
		qs.db.AddError(errors.New("must at least pass one expireDays in ExpireDaysIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("expire_days IN (?)", expireDays))
}

// ExpireDaysIsNotNull is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) ExpireDaysIsNotNull() DorisStorageQuerySet {
	return qs.w(qs.db.Where("expire_days IS NOT NULL"))
}

// ExpireDaysIsNull is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) ExpireDaysIsNull() DorisStorageQuerySet {
	return qs.w(qs.db.Where("expire_days IS NULL"))
}

// ExpireDaysLt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) ExpireDaysLt(expireDays int) DorisStorageQuerySet {
	return qs.w(qs.db.Where("expire_days < ?", expireDays))
}

// ExpireDaysLte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) ExpireDaysLte(expireDays int) DorisStorageQuerySet {
	return qs.w(qs.db.Where("expire_days <= ?", expireDays))
}

// ExpireDaysNe is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) ExpireDaysNe(expireDays int) DorisStorageQuerySet {
	return qs.w(qs.db.Where("expire_days != ?", expireDays))
}

// ExpireDaysNotIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) ExpireDaysNotIn(expireDays ...int) DorisStorageQuerySet {
	if len(expireDays) == 0 {
		qs.db.AddError(errors.New("must at least pass one expireDays in ExpireDaysNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("expire_days NOT IN (?)", expireDays))
}

// FieldConfigMappingEq is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) FieldConfigMappingEq(fieldConfigMapping string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("field_config_mapping = ?", fieldConfigMapping))
}

// FieldConfigMappingGt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) FieldConfigMappingGt(fieldConfigMapping string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("field_config_mapping > ?", fieldConfigMapping))
}

// FieldConfigMappingGte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) FieldConfigMappingGte(fieldConfigMapping string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("field_config_mapping >= ?", fieldConfigMapping))
}

// FieldConfigMappingIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) FieldConfigMappingIn(fieldConfigMapping ...string) DorisStorageQuerySet {
	if len(fieldConfigMapping) == 0 {
		qs.db.AddError(errors.New("must at least pass one fieldConfigMapping in FieldConfigMappingIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("field_config_mapping IN (?)", fieldConfigMapping))
}

// FieldConfigMappingLike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) FieldConfigMappingLike(fieldConfigMapping string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("field_config_mapping LIKE ?", fieldConfigMapping))
}

// FieldConfigMappingLt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) FieldConfigMappingLt(fieldConfigMapping string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("field_config_mapping < ?", fieldConfigMapping))
}

// FieldConfigMappingLte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) FieldConfigMappingLte(fieldConfigMapping string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("field_config_mapping <= ?", fieldConfigMapping))
}

// FieldConfigMappingNe is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) FieldConfigMappingNe(fieldConfigMapping string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("field_config_mapping != ?", fieldConfigMapping))
}

// FieldConfigMappingNotIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) FieldConfigMappingNotIn(fieldConfigMapping ...string) DorisStorageQuerySet {
	if len(fieldConfigMapping) == 0 {
		qs.db.AddError(errors.New("must at least pass one fieldConfigMapping in FieldConfigMappingNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("field_config_mapping NOT IN (?)", fieldConfigMapping))
}

// FieldConfigMappingNotlike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) FieldConfigMappingNotlike(fieldConfigMapping string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("field_config_mapping NOT LIKE ?", fieldConfigMapping))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) GetUpdater() DorisStorageUpdater {
	return NewDorisStorageUpdater(qs.db)
}

// IndexSetEq is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) IndexSetEq(indexSet string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("index_set = ?", indexSet))
}

// IndexSetGt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) IndexSetGt(indexSet string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("index_set > ?", indexSet))
}

// IndexSetGte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) IndexSetGte(indexSet string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("index_set >= ?", indexSet))
}

// IndexSetIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) IndexSetIn(indexSet ...string) DorisStorageQuerySet {
	if len(indexSet) == 0 {
		qs.db.AddError(errors.New("must at least pass one indexSet in IndexSetIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("index_set IN (?)", indexSet))
}

// IndexSetLike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) IndexSetLike(indexSet string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("index_set LIKE ?", indexSet))
}

// IndexSetLt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) IndexSetLt(indexSet string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("index_set < ?", indexSet))
}

// IndexSetLte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) IndexSetLte(indexSet string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("index_set <= ?", indexSet))
}

// IndexSetNe is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) IndexSetNe(indexSet string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("index_set != ?", indexSet))
}

// IndexSetNotIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) IndexSetNotIn(indexSet ...string) DorisStorageQuerySet {
	if len(indexSet) == 0 {
		qs.db.AddError(errors.New("must at least pass one indexSet in IndexSetNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("index_set NOT IN (?)", indexSet))
}

// IndexSetNotlike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) IndexSetNotlike(indexSet string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("index_set NOT LIKE ?", indexSet))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) Limit(limit int) DorisStorageQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) Offset(offset int) DorisStorageQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs DorisStorageQuerySet) One(ret *DorisStorage) error {
	return qs.db.First(ret).Error
}

// OrderAscByBkTenantID is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderAscByBkTenantID() DorisStorageQuerySet {
	return qs.w(qs.db.Order("bk_tenant_id ASC"))
}

// OrderAscByBkbaseTableID is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderAscByBkbaseTableID() DorisStorageQuerySet {
	return qs.w(qs.db.Order("bkbase_table_id ASC"))
}

// OrderAscByExpireDays is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderAscByExpireDays() DorisStorageQuerySet {
	return qs.w(qs.db.Order("expire_days ASC"))
}

// OrderAscByFieldConfigMapping is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderAscByFieldConfigMapping() DorisStorageQuerySet {
	return qs.w(qs.db.Order("field_config_mapping ASC"))
}

// OrderAscByIndexSet is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderAscByIndexSet() DorisStorageQuerySet {
	return qs.w(qs.db.Order("index_set ASC"))
}

// OrderAscBySourceType is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderAscBySourceType() DorisStorageQuerySet {
	return qs.w(qs.db.Order("source_type ASC"))
}

// OrderAscByStorageClusterID is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderAscByStorageClusterID() DorisStorageQuerySet {
	return qs.w(qs.db.Order("storage_cluster_id ASC"))
}

// OrderAscByTableID is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderAscByTableID() DorisStorageQuerySet {
	return qs.w(qs.db.Order("table_id ASC"))
}

// OrderAscByTableType is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderAscByTableType() DorisStorageQuerySet {
	return qs.w(qs.db.Order("table_type ASC"))
}

// OrderDescByBkTenantID is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderDescByBkTenantID() DorisStorageQuerySet {
	return qs.w(qs.db.Order("bk_tenant_id DESC"))
}

// OrderDescByBkbaseTableID is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderDescByBkbaseTableID() DorisStorageQuerySet {
	return qs.w(qs.db.Order("bkbase_table_id DESC"))
}

// OrderDescByExpireDays is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderDescByExpireDays() DorisStorageQuerySet {
	return qs.w(qs.db.Order("expire_days DESC"))
}

// OrderDescByFieldConfigMapping is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderDescByFieldConfigMapping() DorisStorageQuerySet {
	return qs.w(qs.db.Order("field_config_mapping DESC"))
}

// OrderDescByIndexSet is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderDescByIndexSet() DorisStorageQuerySet {
	return qs.w(qs.db.Order("index_set DESC"))
}

// OrderDescBySourceType is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderDescBySourceType() DorisStorageQuerySet {
	return qs.w(qs.db.Order("source_type DESC"))
}

// OrderDescByStorageClusterID is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderDescByStorageClusterID() DorisStorageQuerySet {
	return qs.w(qs.db.Order("storage_cluster_id DESC"))
}

// OrderDescByTableID is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderDescByTableID() DorisStorageQuerySet {
	return qs.w(qs.db.Order("table_id DESC"))
}

// OrderDescByTableType is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) OrderDescByTableType() DorisStorageQuerySet {
	return qs.w(qs.db.Order("table_type DESC"))
}

// SourceTypeEq is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) SourceTypeEq(sourceType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("source_type = ?", sourceType))
}

// SourceTypeGt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) SourceTypeGt(sourceType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("source_type > ?", sourceType))
}

// SourceTypeGte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) SourceTypeGte(sourceType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("source_type >= ?", sourceType))
}

// SourceTypeIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) SourceTypeIn(sourceType ...string) DorisStorageQuerySet {
	if len(sourceType) == 0 {
		qs.db.AddError(errors.New("must at least pass one sourceType in SourceTypeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("source_type IN (?)", sourceType))
}

// SourceTypeLike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) SourceTypeLike(sourceType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("source_type LIKE ?", sourceType))
}

// SourceTypeLt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) SourceTypeLt(sourceType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("source_type < ?", sourceType))
}

// SourceTypeLte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) SourceTypeLte(sourceType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("source_type <= ?", sourceType))
}

// SourceTypeNe is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) SourceTypeNe(sourceType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("source_type != ?", sourceType))
}

// SourceTypeNotIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) SourceTypeNotIn(sourceType ...string) DorisStorageQuerySet {
	if len(sourceType) == 0 {
		qs.db.AddError(errors.New("must at least pass one sourceType in SourceTypeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("source_type NOT IN (?)", sourceType))
}

// SourceTypeNotlike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) SourceTypeNotlike(sourceType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("source_type NOT LIKE ?", sourceType))
}

// StorageClusterIDEq is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) StorageClusterIDEq(storageClusterID uint) DorisStorageQuerySet {
	return qs.w(qs.db.Where("storage_cluster_id = ?", storageClusterID))
}

// StorageClusterIDGt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) StorageClusterIDGt(storageClusterID uint) DorisStorageQuerySet {
	return qs.w(qs.db.Where("storage_cluster_id > ?", storageClusterID))
}

// StorageClusterIDGte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) StorageClusterIDGte(storageClusterID uint) DorisStorageQuerySet {
	return qs.w(qs.db.Where("storage_cluster_id >= ?", storageClusterID))
}

// StorageClusterIDIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) StorageClusterIDIn(storageClusterID ...uint) DorisStorageQuerySet {
	if len(storageClusterID) == 0 {
		qs.db.AddError(errors.New("must at least pass one storageClusterID in StorageClusterIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("storage_cluster_id IN (?)", storageClusterID))
}

// StorageClusterIDLt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) StorageClusterIDLt(storageClusterID uint) DorisStorageQuerySet {
	return qs.w(qs.db.Where("storage_cluster_id < ?", storageClusterID))
}

// StorageClusterIDLte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) StorageClusterIDLte(storageClusterID uint) DorisStorageQuerySet {
	return qs.w(qs.db.Where("storage_cluster_id <= ?", storageClusterID))
}

// StorageClusterIDNe is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) StorageClusterIDNe(storageClusterID uint) DorisStorageQuerySet {
	return qs.w(qs.db.Where("storage_cluster_id != ?", storageClusterID))
}

// StorageClusterIDNotIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) StorageClusterIDNotIn(storageClusterID ...uint) DorisStorageQuerySet {
	if len(storageClusterID) == 0 {
		qs.db.AddError(errors.New("must at least pass one storageClusterID in StorageClusterIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("storage_cluster_id NOT IN (?)", storageClusterID))
}

// TableIDEq is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableIDEq(tableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_id = ?", tableID))
}

// TableIDGt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableIDGt(tableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_id > ?", tableID))
}

// TableIDGte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableIDGte(tableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_id >= ?", tableID))
}

// TableIDIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableIDIn(tableID ...string) DorisStorageQuerySet {
	if len(tableID) == 0 {
		qs.db.AddError(errors.New("must at least pass one tableID in TableIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("table_id IN (?)", tableID))
}

// TableIDLike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableIDLike(tableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_id LIKE ?", tableID))
}

// TableIDLt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableIDLt(tableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_id < ?", tableID))
}

// TableIDLte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableIDLte(tableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_id <= ?", tableID))
}

// TableIDNe is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableIDNe(tableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_id != ?", tableID))
}

// TableIDNotIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableIDNotIn(tableID ...string) DorisStorageQuerySet {
	if len(tableID) == 0 {
		qs.db.AddError(errors.New("must at least pass one tableID in TableIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("table_id NOT IN (?)", tableID))
}

// TableIDNotlike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableIDNotlike(tableID string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_id NOT LIKE ?", tableID))
}

// TableTypeEq is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableTypeEq(tableType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_type = ?", tableType))
}

// TableTypeGt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableTypeGt(tableType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_type > ?", tableType))
}

// TableTypeGte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableTypeGte(tableType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_type >= ?", tableType))
}

// TableTypeIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableTypeIn(tableType ...string) DorisStorageQuerySet {
	if len(tableType) == 0 {
		qs.db.AddError(errors.New("must at least pass one tableType in TableTypeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("table_type IN (?)", tableType))
}

// TableTypeLike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableTypeLike(tableType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_type LIKE ?", tableType))
}

// TableTypeLt is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableTypeLt(tableType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_type < ?", tableType))
}

// TableTypeLte is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableTypeLte(tableType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_type <= ?", tableType))
}

// TableTypeNe is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableTypeNe(tableType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_type != ?", tableType))
}

// TableTypeNotIn is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableTypeNotIn(tableType ...string) DorisStorageQuerySet {
	if len(tableType) == 0 {
		qs.db.AddError(errors.New("must at least pass one tableType in TableTypeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("table_type NOT IN (?)", tableType))
}

// TableTypeNotlike is an autogenerated method
// nolint: dupl
func (qs DorisStorageQuerySet) TableTypeNotlike(tableType string) DorisStorageQuerySet {
	return qs.w(qs.db.Where("table_type NOT LIKE ?", tableType))
}

// SetBkTenantID is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) SetBkTenantID(bkTenantID string) DorisStorageUpdater {
	u.fields[string(DorisStorageDBSchema.BkTenantID)] = bkTenantID
	return u
}

// SetBkbaseTableID is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) SetBkbaseTableID(bkbaseTableID string) DorisStorageUpdater {
	u.fields[string(DorisStorageDBSchema.BkbaseTableID)] = bkbaseTableID
	return u
}

// SetExpireDays is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) SetExpireDays(expireDays *int) DorisStorageUpdater {
	u.fields[string(DorisStorageDBSchema.ExpireDays)] = expireDays
	return u
}

// SetFieldConfigMapping is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) SetFieldConfigMapping(fieldConfigMapping string) DorisStorageUpdater {
	u.fields[string(DorisStorageDBSchema.FieldConfigMapping)] = fieldConfigMapping
	return u
}

// SetIndexSet is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) SetIndexSet(indexSet string) DorisStorageUpdater {
	u.fields[string(DorisStorageDBSchema.IndexSet)] = indexSet
	return u
}

// SetSourceType is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) SetSourceType(sourceType string) DorisStorageUpdater {
	u.fields[string(DorisStorageDBSchema.SourceType)] = sourceType
	return u
}

// SetStorageClusterID is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) SetStorageClusterID(storageClusterID uint) DorisStorageUpdater {
	u.fields[string(DorisStorageDBSchema.StorageClusterID)] = storageClusterID
	return u
}

// SetTableID is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) SetTableID(tableID string) DorisStorageUpdater {
	u.fields[string(DorisStorageDBSchema.TableID)] = tableID
	return u
}

// SetTableType is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) SetTableType(tableType string) DorisStorageUpdater {
	u.fields[string(DorisStorageDBSchema.TableType)] = tableType
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u DorisStorageUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set DorisStorageQuerySet

// ===== BEGIN of DorisStorage modifiers

// DorisStorageDBSchemaField describes database schema field. It requires for method 'Update'
type DorisStorageDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f DorisStorageDBSchemaField) String() string {
	return string(f)
}

// DorisStorageDBSchema stores db field names of DorisStorage
var DorisStorageDBSchema = struct {
	TableID            DorisStorageDBSchemaField
	BkTenantID         DorisStorageDBSchemaField
	BkbaseTableID      DorisStorageDBSchemaField
	SourceType         DorisStorageDBSchemaField
	IndexSet           DorisStorageDBSchemaField
	TableType          DorisStorageDBSchemaField
	FieldConfigMapping DorisStorageDBSchemaField
	ExpireDays         DorisStorageDBSchemaField
	StorageClusterID   DorisStorageDBSchemaField
}{

	TableID:            DorisStorageDBSchemaField("table_id"),
	BkTenantID:         DorisStorageDBSchemaField("bk_tenant_id"),
	BkbaseTableID:      DorisStorageDBSchemaField("bkbase_table_id"),
	SourceType:         DorisStorageDBSchemaField("source_type"),
	IndexSet:           DorisStorageDBSchemaField("index_set"),
	TableType:          DorisStorageDBSchemaField("table_type"),
	FieldConfigMapping: DorisStorageDBSchemaField("field_config_mapping"),
	ExpireDays:         DorisStorageDBSchemaField("expire_days"),
	StorageClusterID:   DorisStorageDBSchemaField("storage_cluster_id"),
}

// Update updates DorisStorage fields by primary key
// nolint: dupl
func (o *DorisStorage) Update(db *gorm.DB, fields ...DorisStorageDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"table_id":             o.TableID,
		"bk_tenant_id":         o.BkTenantID,
		"bkbase_table_id":      o.BkbaseTableID,
		"source_type":          o.SourceType,
		"index_set":            o.IndexSet,
		"table_type":           o.TableType,
		"field_config_mapping": o.FieldConfigMapping,
		"expire_days":          o.ExpireDays,
		"storage_cluster_id":   o.StorageClusterID,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update DorisStorage %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// DorisStorageUpdater is an DorisStorage updates manager
type DorisStorageUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewDorisStorageUpdater creates new DorisStorage updater
// nolint: dupl
func NewDorisStorageUpdater(db *gorm.DB) DorisStorageUpdater {
	return DorisStorageUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&DorisStorage{}),
	}
}

// ===== END of DorisStorage modifiers

// ===== END of all query sets
