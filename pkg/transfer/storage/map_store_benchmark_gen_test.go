// Tencent is pleased to support the open source community by making
// 蓝鲸智云 - 监控平台 (BlueKing - Monitor) available.
// Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.
// Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
// You may obtain a copy of the License at http://opensource.org/licenses/MIT
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

//go:build Map
// +build Map

package storage_test

import (
	"testing"
)

// BenchmarkStoreSet_Map :
func BenchmarkStoreSet_Map(b *testing.B) {
	withClosingStore(benchmarkStoreSet, b, newMap())
}

// BenchmarkStoreUpdate_Map :
func BenchmarkStoreUpdate_Map(b *testing.B) {
	withClosingStore(benchmarkStoreUpdate, b, newMap())
}

// BenchmarkStoreGet_Map :
func BenchmarkStoreGet_Map(b *testing.B) {
	withClosingStore(benchmarkStoreGet, b, newMap())
}

// BenchmarkStoreGetHotPot_Map :
func BenchmarkStoreGetHotPot_Map(b *testing.B) {
	withClosingStore(benchmarkStoreGetHotPot, b, newMap())
}

// benchmarkStoreExistsMissing_Map :
func BenchmarkStoreExistsMissing_Map(b *testing.B) {
	withClosingStore(benchmarkStoreExistsMissing, b, newMap())
}

// BenchmarkStoreExists_Map :
func BenchmarkStoreExists_Map(b *testing.B) {
	withClosingStore(benchmarkStoreExists, b, newMap())
}

// BenchmarkStoreDelete_Map :
func BenchmarkStoreDelete_Map(b *testing.B) {
	withClosingStore(benchmarkStoreDelete, b, newMap())
}

// BenchmarkStoreScan_Map :
func BenchmarkStoreScan_Map(b *testing.B) {
	withClosingStore(benchmarkStoreScan, b, newMap())
}

// BenchmarkStoreCommit_Map :
func BenchmarkStoreCommit_Map(b *testing.B) {
	withClosingStore(benchmarkStoreCommit, b, newMap())
}
