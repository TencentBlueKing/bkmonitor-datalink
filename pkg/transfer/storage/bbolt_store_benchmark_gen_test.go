// Tencent is pleased to support the open source community by making
// 蓝鲸智云 - 监控平台 (BlueKing - Monitor) available.
// Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.
// Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
// You may obtain a copy of the License at http://opensource.org/licenses/MIT
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

//go:build bbolt
// +build bbolt

package storage_test

import (
	"testing"
)

// BenchmarkStoreSet_BBolt :
func BenchmarkStoreSet_BBolt(b *testing.B) {
	withClosingStore(benchmarkStoreSet, b, newBBolt())
}

// BenchmarkStoreUpdate_BBolt :
func BenchmarkStoreUpdate_BBolt(b *testing.B) {
	withClosingStore(benchmarkStoreUpdate, b, newBBolt())
}

// BenchmarkStoreGet_BBolt :
func BenchmarkStoreGet_BBolt(b *testing.B) {
	withClosingStore(benchmarkStoreGet, b, newBBolt())
}

// BenchmarkStoreGetHotPot_BBolt :
func BenchmarkStoreGetHotPot_BBolt(b *testing.B) {
	withClosingStore(benchmarkStoreGetHotPot, b, newBBolt())
}

// benchmarkStoreExistsMissing_BBolt :
func BenchmarkStoreExistsMissing_BBolt(b *testing.B) {
	withClosingStore(benchmarkStoreExistsMissing, b, newBBolt())
}

// BenchmarkStoreExists_BBolt :
func BenchmarkStoreExists_BBolt(b *testing.B) {
	withClosingStore(benchmarkStoreExists, b, newBBolt())
}

// BenchmarkStoreDelete_BBolt :
func BenchmarkStoreDelete_BBolt(b *testing.B) {
	withClosingStore(benchmarkStoreDelete, b, newBBolt())
}

// BenchmarkStoreScan_BBolt :
func BenchmarkStoreScan_BBolt(b *testing.B) {
	withClosingStore(benchmarkStoreScan, b, newBBolt())
}

// BenchmarkStoreCommit_BBolt :
func BenchmarkStoreCommit_BBolt(b *testing.B) {
	withClosingStore(benchmarkStoreCommit, b, newBBolt())
}
